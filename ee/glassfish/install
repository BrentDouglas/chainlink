#!/bin/bash
#
# @author Brent Douglas <brent.n.douglas@gmail.com>
#

RETVAL=0
UNINSTALL=0

MODULES_DIR="../glassfish/modules"
BACKUP_DIR="backup"
CHAINLINK_LIB_DIR="lib"

usage() {
  echo "Usage: install [-h] [-u]"
  echo "  -u Uninstall"
  echo "  -h Print usage"
}

install() {
  [ -d ${BACKUP_DIR} ] || {
    mkdir ${BACKUP_DIR}
  }
  mv ${MODULES_DIR}/{glassfish-batch-connector.jar,glassfish-batch-commands.jar,com.ibm.jbatch-ri-spi.jar,com.ibm.jbatch-runtime-all.jar} ${BACKUP_DIR}
  cp ${CHAINLINK_LIB_DIR}/{then-*,chainlink-*,trove4j-*}.jar ${MODULES_DIR}
  echo "Installed Chainlink."
}

uninstall() {
  mv ${BACKUP_DIR}/{glassfish-batch-connector.jar,glassfish-batch-commands.jar,com.ibm.jbatch-ri-spi.jar,com.ibm.jbatch-runtime-all.jar} ${MODULES_DIR}
  rm ${MODULES_DIR}/{then-*,chainlink-*,trove4j-*}.jar
  echo "Uninstalled Chainlink."
}

while getopts "hu" opt; do
  case ${opt} in
    h)
      usage
      ;;

    u)
      UNINSTALL=1
      ;;

    \?)
      echo "Invalid option: -${OPTARG}"
      usage
      exit 1
      ;;

    :)
      echo "Option -${OPTARG} requires an argument."
      usage
      exit 1
      ;;
  esac
done

if [ ${UNINSTALL} -eq 0 ]; then
  install
else
  uninstall
fi

exit ${RETVAL}
