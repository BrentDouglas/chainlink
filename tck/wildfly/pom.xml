<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>chainlink-tck</artifactId>
        <groupId>io.machinecode.chainlink</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>chainlink-tck-wildfly</artifactId>

    <properties>
        <container.dir>${project.build.directory}/wildfly-${version.org.wildfly}</container.dir>
        <chainlink.dir>${container.dir}/chainlink-${project.version}</chainlink.dir>
        <deployment.dir>${project.build.directory}/deps</deployment.dir>

        <cdi.artifact.loader.factory.class>io.machinecode.chainlink.inject.cdi.CdiArtifactLoaderFactory</cdi.artifact.loader.factory.class>

        <thread.factory.jndi.name>java:jboss/ee/concurrency/factory/default</thread.factory.jndi.name>
        <cache.manager.jndi.name>java:jboss/infinispan/container/chainlink</cache.manager.jndi.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.machinecode.chainlink</groupId>
            <artifactId>chainlink-spi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.machinecode.chainlink</groupId>
            <artifactId>chainlink-ee-wildfly</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.machinecode.chainlink</groupId>
            <artifactId>chainlink-tck-core</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.ibm.jbatch</groupId>
            <artifactId>com.ibm.jbatch.tck</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.batch</groupId>
                    <artifactId>javax.batch-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.ibm.jbatch</groupId>
                    <artifactId>com.ibm.jbatch.spi</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.ibm.jbatch</groupId>
                    <artifactId>com.ibm.jbatch.container</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>gnu.getopt</groupId>
            <artifactId>java-getopt</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.core</groupId>
            <artifactId>arquillian-core-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>re-jpa</id>
            <activation>
                <property><name>re-jpa</name></property>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>first-pass-persistence-xml</id>
                                <phase>generate-test-resources</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>second-pass-persistence-xml</id>
                                <phase>process-test-resources</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>tr-coherence</id>
            <activation>
                <property><name>tr-coherence</name></property>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>io.machinecode.chainlink</groupId>
                    <artifactId>chainlink-tck-coherence</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-tck-coherence</id>
                                <phase>process-test-classes</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>in-seam</id>
            <activation>
                <property><name>in-seam</name></property>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>io.machinecode.chainlink</groupId>
                    <artifactId>chainlink-tck-seam</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-tck-seam</id>
                                <phase>process-test-classes</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>re-infinispan</id>
            <activation>
                <property><name>re-infinispan</name></property>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <repository.factory.class>io.machinecode.chainlink.repository.infinispan.JndiInfinispanRepositoryFactory</repository.factory.class>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                                <manifestEntries>
                                    <Dependencies>
                                        io.machinecode.chainlink.repository.infinispan,
                                        javaee.api,
                                        org.infinispan
                                    </Dependencies>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>tr-infinispan</id>
            <activation>
                <property><name>tr-infinispan</name></property>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                                <manifestEntries>
                                    <Dependencies>
                                        io.machinecode.chainlink.transport.infinispan,
                                        javax.transaction.api,
                                        org.infinispan
                                    </Dependencies>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-test-resources</id>
                        <phase>generate-test-resources</phase>
                    </execution>
                    <execution>
                        <id>destroy-test-resources</id>
                        <phase>post-integration-test</phase>
                    </execution>
                    <execution>
                        <id>install-background-server</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <unzip src="${root.dir}/dist/target/chainlink-${project.version}-all.zip"
                                       dest="${container.dir}"/>
                                <chmod file="${chainlink.dir}/install" perm="754"/>
                                <exec executable="${chainlink.dir}/install"
                                      dir="${chainlink.dir}">
                                    <arg value="-c"/><arg value="wildfly"/>
                                    <arg value="-d"/><arg value="${container.dir}"/>
                                    <arg value="-m"/><arg value="all"/>
                                </exec>
                                <copy file="${project.basedir}/standalone.xml"
                                      tofile="${container.dir}/standalone/configuration/standalone.xml"
                                      filtering="true"
                                      overwrite="true">
                                    <filterset>
                                        <filter token="tck.database.url" value="${tck.database.url}" />
                                        <filter token="tck.database.driver" value="${tck.database.driver}" />
                                        <filter token="tck.database.datasource" value="${tck.database.datasource}" />
                                        <filter token="tck.database.user" value="${tck.database.user}" />
                                        <filter token="tck.database.password" value="${tck.database.password}" />

                                        <filter token="artifact.loader.factory.class" value="${artifact.loader.factory.class}" />
                                        <filter token="repository.factory.class" value="${repository.factory.class}" />
                                        <filter token="executor.factory.class" value="${executor.factory.class}" />
                                        <filter token="job.loader.factory.class" value="${job.loader.factory.class}" />
                                        <filter token="security.factory.class" value="${security.factory.class}" />
                                        <filter token="transaction.manager.factory.class" value="${transaction.manager.factory.class}" />
                                        <filter token="registry.factory.class" value="${registry.factory.class}" />
                                        <filter token="mbean.server.factory.class" value="${mbean.server.factory.class}" />
                                        <filter token="marshalling.factory.class" value="${marshalling.factory.class}" />

                                        <filter token="cache.manager.jndi.name" value="${cache.manager.jndi.name}" />
                                    </filterset>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>uninstall-background-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <exec executable="${chainlink.dir}/install"
                                      dir="${chainlink.dir}">
                                    <arg value="-u"/>
                                    <arg value="-c"/><arg value="wildfly"/>
                                    <arg value="-d"/><arg value="${container.dir}"/>
                                    <arg value="-m"/><arg value="all"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>instrument-classes</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <property name="test_classpath" refid="maven.test.classpath"/>
                                <exec executable="java"
                                      dir="${project.build.directory}">
                                    <arg value="-cp"/>
                                    <arg value="${test_classpath}"/>
                                    <arg value="io.machinecode.chainlink.tck.core.TestInstrument"/>
                                    <arg value="-c"/><arg value="io.machinecode.chainlink.tck.core.TckJobOperatorConfiguration"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/ee/TransactionTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/BatchletRestartStateMachineTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/ChunkTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/ContextAndListenerTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/ContextsGetIdTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/DeciderTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/ExecuteTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/ExecutionTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/FlowTransitioningTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/JobAttributeRestartTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/JobExecutableSequenceTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/JobLevelPropertiesTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/JobOperatorTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/MetricsTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/ParallelExecutionTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/PropertySubstitutionTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/RestartNotMostRecentTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/RetryListenerTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/SplitFlowTransitionLoopTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/SplitTransitioningTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/StartLimitTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/StepExecutionTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/StepLevelPropertiesTests.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/tests/jslxml/StopOrFailOnExitStatusWithRestartTests.class"/>
                                    <arg value="-l"/><arg value="${project.build.directory}/deps/com.ibm.jbatch.tck.spi-${version.com.ibm.jbatch.com.ibm.jbatch.tck.spi}.jar"/>
                                    <arg value="-l"/><arg value="${project.build.directory}/deps/chainlink-tck-core-${project.version}.jar"/>
                                    <arg value="-l"/><arg value="${project.build.directory}/deps/testng-${version.org.testng.testng}.jar"/>
                                    <arg value="-r"/><arg value="${project.build.testOutputDirectory}/coherence-cache-config.xml"/>
                                    <arg value="-r"/><arg value="${project.build.testOutputDirectory}/ehcache.xml"/>
                                    <arg value="-r"/><arg value="${project.build.testOutputDirectory}/hazelcast.xml"/>
                                    <arg value="-r"/><arg value="${project.build.testOutputDirectory}/tck-udp.xml"/>
                                    <arg value="-r"/><arg value="${project.build.testOutputDirectory}/ChainlinkMessages_en.properties"/>
                                    <arg value="-r"/><arg value="${project.build.testOutputDirectory}/chainlink.xml"/>
                                    <arg value="-r"/><arg value="${project.build.testOutputDirectory}/META-INF"/>
                                    <arg value="-w"/><arg value="${project.build.testOutputDirectory}/WEB-INF"/>
                                    <arg value="-w"/><arg value="${project.basedir}/src/test/resources/WEB-INF/web.xml"/>
                                    <arg value="-e"/><arg value="${project.build.directory}/exported-tests"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>instrument-helpers</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <property name="test_classpath" refid="maven.test.classpath"/>
                                <exec executable="java"
                                      dir="${project.build.directory}">
                                    <arg value="-cp"/>
                                    <arg value="${test_classpath}"/>
                                    <arg value="io.machinecode.chainlink.tck.core.FieldInstrument"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/ConnectionHelper.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/RetryConnectionHelper.class"/>
                                    <arg value="-f"/><arg value="jndiName"/>
                                    <arg value="-v"/><arg value="java:jboss/datasources/ExampleDS"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>instrument-artifacts</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <property name="test_classpath" refid="maven.test.classpath"/>
                                <exec executable="java"
                                      dir="${project.build.directory}">
                                    <arg value="-cp"/>
                                    <arg value="${test_classpath}"/>
                                    <arg value="io.machinecode.chainlink.tck.core.FieldInstrument"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/InventoryInitReader.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/InventoryInitWriter.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/InventoryReader.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/InventoryWriter.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/InventoryStepListener.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/NumbersReader.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/RetryInitReader.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/RetryInitWriter.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/RetryReader.class"/>
                                    <arg value="-i"/><arg value="${project.build.testOutputDirectory}/com/ibm/jbatch/tck/artifacts/chunkartifacts/RetryWriter.class"/>
                                    <arg value="-c"/><arg value="jdbc/orderDB"/>
                                    <arg value="-v"/><arg value="java:jboss/datasources/ExampleDS"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>ensure-log4j-properties</id>
                        <phase>generate-test-resources</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-test-resources</id>
                        <phase>generate-test-resources</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-tck</id>
                        <phase>process-test-classes</phase>
                    </execution>
                    <execution>
                        <id>copy-testng</id>
                        <phase>process-test-classes</phase>
                    </execution>
                    <execution>
                        <id>unpack-tck</id>
                        <phase>process-test-sources</phase>
                    </execution>
                    <execution>
                        <id>unpack-container</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.wildfly</groupId>
                                    <artifactId>wildfly-dist</artifactId>
                                    <version>${version.org.wildfly}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipExec>false</skipExec>
                    <systemPropertyVariables>
                        <container.dir>${container.dir}</container.dir>
                        <wildfly.opts>${wildfly.opts}</wildfly.opts>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>log4j-properties</id>
                        <phase>process-test-resources</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>read-properties</id>
                        <phase>generate-sources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>